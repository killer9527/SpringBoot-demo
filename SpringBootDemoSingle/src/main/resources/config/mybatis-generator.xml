<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">
<generatorConfiguration>
    <!--配置说明：http://blog.csdn.net/isea533/article/details/42102297 -->
    <context id="DB2Tables" targetRuntime="MyBatis3">
        <commentGenerator>
            <!--是否关闭时间标志true：是 false:否-->
            <property name="suppressDate" value="true"/>
            <!-- 是否去除自动生成的注释 true：是 false:否 -->
            <property name="suppressAllComments" value="true"/>
        </commentGenerator>

        <!--数据库连接的信息：驱动类、连接地址、用户名、密码，可以提出到单独配置文件中 -->
        <jdbcConnection driverClass="com.mysql.jdbc.Driver"
                        connectionURL="jdbc:mysql://10.200.xx.xx:3306/MybatisDemo?characterEncoding=gbk"
                        userId="username" password="password">
        </jdbcConnection>

        <!-- 默认false，把JDBC DECIMAL 和 NUMERIC 类型解析为 Integer，为 true时把JDBC DECIMAL和NUMERIC 类型解析为java.math.BigDecimal -->
        <javaTypeResolver>
            <property name="forceBigDecimals" value="false"/>
        </javaTypeResolver>

        <!-- 生成模型的包名和位置-->
        <javaModelGenerator targetPackage="com.wfw.entity" targetProject="src">
            <!-- enableSubPackages:是否让schema作为包的后缀 -->
            <property name="enableSubPackages" value="false"/>
            <!-- 从数据库返回的值被清理前后的空格 -->
            <property name="trimStrings" value="true"/>
        </javaModelGenerator>

        <!-- 生成映射文件的包名和位置-->
        <sqlMapGenerator targetPackage="com.wfw.mapper" targetProject="src">
            <!-- enableSubPackages:是否让schema作为包的后缀 -->
            <property name="enableSubPackages" value="true"/>
        </sqlMapGenerator>

        <!-- 生成DAO(mapper接口)的包名和位置-->
        <javaClientGenerator type="XMLMAPPER" targetPackage="com.wfw.dao" targetProject="src">
            <!-- enableSubPackages:是否让schema作为包的后缀 -->
            <property name="enableSubPackages" value="true"/>
        </javaClientGenerator>

        <!-- 要生成哪些表-->
        <!--tableName是数据库中的表名或视图名 domainObjectName是实体类名-->
        <table tableName="Users" domainObjectName="Users" enableCountByExample="false"
               enableUpdateByExample="false"
               enableDeleteByExample="false" enableSelectByExample="false" selectByExampleQueryId="false">
            <!--如果设置为true,那么MBG会使用从数据库元数据获取的列名作为生成的实体对象的属性。 如果为false(默认值)，MGB将会尝试将返回的名称转换为驼峰形式。 在这两种情况下，可以通过元素显示指定，在这种情况下将会忽略这个（useActualColumnNames）属性。-->
            <property name="useActualColumnNames" value="true"/>
        </table>
        <table tableName="Department" domainObjectName="Department" enableCountByExample="false"
               enableUpdateByExample="false"
               enableDeleteByExample="false" enableSelectByExample="false" selectByExampleQueryId="false">
            <!--如果设置为true,那么MBG会使用从数据库元数据获取的列名作为生成的实体对象的属性。 如果为false(默认值)，MGB将会尝试将返回的名称转换为驼峰形式。 在这两种情况下，可以通过元素显示指定，在这种情况下将会忽略这个（useActualColumnNames）属性。-->
            <property name="useActualColumnNames" value="true"/>
            <!--解决字段类型为text等会默认产生XXXXWithBlobs的方法问题http://blog.csdn.net/maoliangfei2011/article/details/52231463-->
            <columnOverride column="departmentCulture" javaType="java.lang.String" jdbcType="VARCHAR"/>
        </table>
    </context>
</generatorConfiguration>
